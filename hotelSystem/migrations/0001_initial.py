# Generated by Django 3.2.8 on 2022-01-02 06:59

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_picture', models.ImageField(default='images/staff.png', upload_to='staff_img/')),
                ('isAdmin', models.BooleanField(default=False)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], default='Male', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CheckIn',
            fields=[
                ('id', models.CharField(blank=True, max_length=50, primary_key=True, serialize=False)),
                ('initial_amount', models.PositiveSmallIntegerField(blank=True)),
                ('check_in_date_time', models.DateTimeField(default=datetime.datetime(2022, 1, 2, 14, 59, 7, 42319))),
                ('last_edited_on', models.DateTimeField(default=datetime.datetime(2022, 1, 2, 14, 59, 7, 42319))),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('contact_no', models.CharField(max_length=15)),
                ('address', models.CharField(max_length=100)),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], default='Male', max_length=20)),
                ('status', models.CharField(choices=[('NR', 'Not Reserved'), ('R', 'Reserved'), ('CI', 'Checked In'), ('CO', 'Checked Out')], default='Not Reserved', max_length=20)),
            ],
            options={
                'ordering': ['first_name', 'middle_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('price', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Facilities',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('reservation_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('no_of_children', models.PositiveSmallIntegerField(default=0)),
                ('no_of_adults', models.PositiveSmallIntegerField(default=1)),
                ('reservation_date_time', models.DateTimeField(default=datetime.datetime(2022, 1, 2, 14, 59, 7, 39319))),
                ('expected_arrival_date_time', models.DateTimeField(default=datetime.datetime(2022, 1, 2, 14, 59, 7, 39319))),
                ('expected_departure_date_time', models.DateTimeField(default=datetime.datetime(2022, 1, 2, 14, 59, 7, 39319))),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelSystem.customer')),
                ('staff', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('price', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_no', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=256)),
                ('availability', models.BooleanField(default=True)),
                ('facility', models.ManyToManyField(blank=True, to='hotelSystem.Facility')),
                ('reservation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hotelSystem.reservation')),
                ('room_type', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='hotelSystem.roomtype')),
            ],
        ),
        migrations.CreateModel(
            name='CheckOut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stay_duration', models.DurationField(null=True)),
                ('total_amount', models.PositiveSmallIntegerField(default=0)),
                ('pay_amount', models.PositiveSmallIntegerField(default=0)),
                ('check_out_date_time', models.DateTimeField(null=True)),
                ('check_in', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='hotelSystem.checkin')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='checkin',
            name='reservation',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='hotelSystem.reservation'),
        ),
        migrations.AddField(
            model_name='checkin',
            name='rooms',
            field=models.ManyToManyField(blank=True, to='hotelSystem.Room'),
        ),
        migrations.AddField(
            model_name='checkin',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
    ]
